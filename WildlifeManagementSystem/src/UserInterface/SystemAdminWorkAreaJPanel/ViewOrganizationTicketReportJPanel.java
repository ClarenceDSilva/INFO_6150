/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdminWorkAreaJPanel;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Continent.Continent;
import Business.Country.Country;
import Business.Organization.Organization;
import Business.State.State;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Rohit
 */
public class ViewOrganizationTicketReportJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private ArrayList<Continent> continentList;
    private ArrayList<Enterprise> enterpriseList;
    private ArrayList<Organization> organizationList;
    private Continent continent;
    private Country country;
    private State state;
    private Enterprise enterprise;
    private Organization organization;

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    public ViewOrganizationTicketReportJPanel(JPanel userProcessContainer, EcoSystem system, ArrayList<Continent> continentList, ArrayList<Enterprise> enterpriseList, ArrayList<Organization> organizationList, Continent continent, Country country, State state, Enterprise enterprise, Organization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.continentList = continentList;
        this.organizationList = organizationList;
        LocationJTable.getTableHeader().setFont(new Font("Arial", Font.BOLD, 20));
        populateTable();
        
    }

    public void populateTable() {
      DefaultTableModel model = (DefaultTableModel) LocationJTable.getModel();

        
                model.setRowCount(0);
for (int i = 0; i < system.getContinentList().size(); i++) {
            continent = continentList.get(i);

            for (int j = 0; j < continent.getCountryDirectory().getCountryList().size(); j++) {
                country = continent.getCountryDirectory().getCountryList().get(j);
                for (int k = 0; k < country.getEnterpriseDirectory().getEnterpriseList().size(); k++) {
                    enterprise = country.getEnterpriseDirectory().getEnterpriseList().get(k);
                    for (int l = 0; l < enterprise.getOrganizationDirectory().getOrganizationList().size(); l++) {
                    organization = enterprise.getOrganizationDirectory().getOrganizationList().get(l);
      //  for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
           // if(request.getSender().getUsername().equalsIgnoreCase("Auto-Generated")){
            Object[] row = new Object[5];
            row[0] = continent.getName();
            row[1] = country.getCountryName();
            row[2] = enterprise.getName();
             row[3] = organization.getName();
            row[4] = organization.getWorkQueue().getWorkRequestList().size();

            model.addRow(row);
           // }
       // }
                    }}
        }}
    }  

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        LocationJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        btnGraph = new javax.swing.JButton();

        LocationJTable.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        LocationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Continent", "Country", "State", "Organization", "Count"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(LocationJTable);

        backJButton.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        refreshJButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        btnGraph.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnGraph.setText("Graph Mode");
        btnGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGraphActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 922, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(refreshJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGraph, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backJButton)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(refreshJButton)
                        .addGap(43, 43, 43)
                        .addComponent(btnGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(325, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
       ViewAllReportsJPanel manageEnterpriseJPanel = new ViewAllReportsJPanel(userProcessContainer, system, continentList, enterpriseList, organizationList, continent, country, state, enterprise, organization);
        userProcessContainer.add("ManageAutoGeneratedTicketsJPanel", manageEnterpriseJPanel);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void btnGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGraphActionPerformed
        int col = 3;
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        DefaultTableModel model = (DefaultTableModel) LocationJTable.getModel();
        for(int row = 0; row < LocationJTable.getRowCount(); row++){
            pieDataset.setValue(model.getValueAt(row, col).toString(), (Integer)model.getValueAt(row, col+1));
        }
        JFreeChart chart = ChartFactory.createPieChart3D("Organization level Status Statistics", pieDataset);
        PiePlot3D p = (PiePlot3D) chart.getPlot();
        ChartFrame frame = new ChartFrame("Pie Chart", chart);
        frame.setVisible(true);
        frame.setSize(600, 750);
    }//GEN-LAST:event_btnGraphActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable LocationJTable;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnGraph;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshJButton;
    // End of variables declaration//GEN-END:variables
}
